<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd"
       default-autowire="byName">

    <!-- 如果Mybatis和Spring整合,那么数据源必须在Spring中配置,在Mybatis中配置无效 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!-- 配置数据源的相关信息 -->
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql:///shop?serverTimezone=GMT%2B8"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!-- Mybatis和Spring整合的时候需要借助一个包,mybatis-spring -->
    <!-- 将Mybatis和Spring整合起来 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 映射文件;因为可以写*通配 -->
        <property name="mapperLocations" value="classpath*:mapper/*/*Mapper.xml"/>
    </bean>

    <!-- 为Dao增加一个注解;在Spring IOC创建一个对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 告诉SPring,dao放到哪里了 -->
        <property name="basePackage" value="com.zhang"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">

    </bean>

    <!-- 写一个通知;advice;这个通知不我们写,Spring帮助我们写好了 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 在通知里面,可以配置哪些方法要开始事务,哪些方法不开始事务
                propagation:传播特性
                isolation:隔离级别
                rollback-for:哪些异常要回滚;默认是runTimeException
             -->
            <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Exception"/>

            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!-- aop配置 -->
    <aop:config>
        <!-- 哪此类的哪些方法要执行通知里面的代码 -->
        <aop:pointcut id="pointcut" expression="execution(* com.zhang.*.service.*.*(..))"/>
        <!-- 织入 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>
</beans>